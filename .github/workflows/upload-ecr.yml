# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS, when there is a push to the "main" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of the `ECR_REPOSITORY` environment variable in the workflow below with your repository's name.
#    Replace the value of the `AWS_REGION` environment variable in the workflow below with your repository's region.
#
# 4. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.

name: Upload image to Amazon ECR Public

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2                  # 원하는 AWS 리전으로 설정
  ECR_REPOSITORY: burn-test          # Amazon ECR 퍼블릭 리포지토리 이름
  ECR_REGISTRY: public.ecr.aws/x9e1n4d6  # Amazon ECR 퍼블릭 레지스트리 URI

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR Public
      run: |
        aws ecr-public get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

    - name: Build, tag, and push image to Amazon ECR Public
      run: |
        IMAGE_TAG=latest
        docker build -t ${{ env.ECR_REGISTRY }}/{{ env.ECR_REPOSITORY }}:$IMAGE_TAG .
        docker push ${{ env.ECR_REGISTRY }}/{{ env.ECR_REPOSITORY }}:$IMAGE_TAG
        
